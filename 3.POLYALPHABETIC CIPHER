def generate_key(message, key):
    key = list(key)
    if len(message) == len(key):
        return key
    else:
        for i in range(len(message) - len(key)):
            key.append(key[i % len(key)])
    return "".join(key)

def encrypt_vigenere(message, key):
    cipher_text = []
    key = generate_key(message, key)
    for i in range(len(message)):
        if message[i].isalpha():
            x = (ord(message[i].lower()) + ord(key[i].lower())) % 26
            x += ord('a')
            if message[i].isupper():
                cipher_text.append(chr(x).upper())
            else:
                cipher_text.append(chr(x))
        else:
            cipher_text.append(message[i])
    return "".join(cipher_text)

def decrypt_vigenere(cipher_text, key):
    original_text = []
    key = generate_key(cipher_text, key)
    for i in range(len(cipher_text)):
        if cipher_text[i].isalpha():
            x = (ord(cipher_text[i].lower()) - ord(key[i].lower()) + 26) % 26
            x += ord('a')
            if cipher_text[i].isupper():
                original_text.append(chr(x).upper())
            else:
                original_text.append(chr(x))
        else:
            original_text.append(cipher_text[i])
    return "".join(original_text)

message = "Hello, World!"
key = "KEY"

encrypted_message = encrypt_vigenere(message, key)
decrypted_message = decrypt_vigenere(encrypted_message, key)

print(f"Original: {message}")
print(f"Encrypted: {encrypted_message}")
print(f"Decrypted: {decrypted_message}")
